import ts from 'typescript';
import * as Doc from './doc';
import * as TopLevelStatement from './top-level-statement';

export type t = TopLevelStatement.t[];

export function compile(program: ts.SourceFile): t {
  return program.statements.flatMap((statement) => TopLevelStatement.compile(statement));
}

export function print(program: t, withHeader: boolean): Doc.t {
  return Doc.group([
    Doc.join(
      [Doc.hardline, Doc.hardline],
      [
        ...(withHeader
          ? [
              `(* Generated by coq-of-ts *)
Require Import Coq.Lists.List.
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Import ListNotations.
Local Open Scope bool.
Local Open Scope string.
Local Open Scope Z.`,
            ]
          : []),
        ...program.map((programElement) => TopLevelStatement.print(programElement)),
      ],
    ),
    Doc.hardline,
  ]);
}
